#!/usr/bin/env bash
DMEDITOR="vim"

# An array of options to choose.
# You can edit this list to add/remove config files.
declare -A options
options[bash]="$HOME/.bashrc"
options[dwm]="$HOME/dwm-6.2/config.h"
options[autostart_dwm]="$HOME/.dwm/autostart.sh"
options[fish]="$HOME/.config/fish/config.fish"
options[Kitty]="$HOME/.config/kitty/kitty.conf"
options[neofetch]="$HOME/.config/neofetch/config.conf"
options[i3]="$HOME/.config/i3/config"
options[picom]="$HOME/.config/picom/picom.conf"
options[qutebrowser config.py]="$HOME/.config/qutebrowser/config.py"
options[qutebrowser pageAcceuil.html]="$HOME/.config/qutebrowser/pageAcceuil.html"
options[vim]="$HOME/.vimrc"
options[bash_aliases]="$HOME/.bash_aliases"
options[bspwm]="$HOME/.config/bspwm/bspwmrc"
options[sxhkd]="$HOME/.config/sxhkd/sxhkdrc"

# Clean options array making sure that the files exist
declare -A options_clean
  for i in "${!options[@]}"; do
    [[ -f ${options["${i}"]} ]] && options_clean["${i}"]=${options["${i}"]}
  done

# Piping the above array (cleaned) into dmenu.
# We use "printf '%s\n'" to format the array one item to a line.
choice=$(printf '%s\n' "${!options_clean[@]}" | sort | dmenu -i -l 20 -p 'Edit config:' "$@")


# What to do when/if we choose a file to edit.
if [ "$choice" ]; then
  cfg=$(printf '%s\n' "${options_clean["${choice}"]}")
  # $DMEDITOR "$cfg"
  kitty vim $cfg

# What to do if we just escape without choosing anything.
else
    echo "Program terminated." && exit 0
fi

